plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'com.github.kt3k.coveralls'
}

jacoco {
    toolVersion = '0.8.10'
}

group = 'io.github.bluecodesystems'
version = project.VERSION_NAME

android {
    namespace 'com.vijay.jsonwizard'
    compileSdk 35
    buildToolsVersion '35.0.0'

    defaultConfig {
        minSdk 28
        targetSdk 35
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        buildConfigField 'String', 'VERSION_NAME', "\"${project.VERSION_NAME}\""
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    packaging {
        resources {
            excludes += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.txt',
                    'META-INF/license.txt',
                    'META-INF/NOTICE',
                    'META-INF/NOTICE.txt',
                    'META-INF/notice.txt',
                    'META-INF/ASL2.0',
                    'META-INF/INDEX.LIST'
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                jvmArgs(
                        '--add-opens=java.base/java.lang=ALL-UNNAMED',
                        '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                        '--add-opens=java.base/java.io=ALL-UNNAMED',
                        '--add-opens=java.base/java.net=ALL-UNNAMED',
                        '--add-opens=java.base/java.util=ALL-UNNAMED',
                        '--add-opens=java.base/java.text=ALL-UNNAMED',
                        '--add-opens=java.base/java.security=ALL-UNNAMED',
                        '--add-opens=java.base/jdk.internal.reflect=ALL-UNNAMED',
                        '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
                        '--add-opens=java.base/jdk.internal.util=ALL-UNNAMED',
                        '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
                        '--add-opens=java.base/sun.security.util=ALL-UNNAMED',
                        '--add-opens=java.desktop/java.awt.font=ALL-UNNAMED',
                        '--add-exports=java.base/jdk.internal.reflect=ALL-UNNAMED',
                        '-Xmx1024m'
                )
                systemProperty 'robolectric.dependency.repo.url', 'https://repo1.maven.org/maven2'
                systemProperty 'robolectric.enabledSdks', '28'
            }
        }
    }

}

configurations.configureEach {
    exclude group: 'net.zetetic', module: 'sqlcipher-android'
}

repositories {
    flatDir {
        dirs rootProject.file('libs'), file("$projectDir/libs"), rootProject.projectDir
    }
    maven { url 'https://jitpack.io' }
    mavenCentral()
    google()
    mavenLocal()
}

dependencies {
    implementation('io.github.bluecodesystems:opensrp-client-simprints:1.1.0@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
    implementation 'com.github.bmelnychuk:atv:1.2.9'
    implementation 'com.github.johnkil.print:print:1.3.1'
    implementation 'com.github.rey5137:material:1.3.1'
    implementation 'io.github.bluecodesystems:materialedittext:3.1.6'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation('com.github.ganfra:material-spinner:2.0.0') {
        exclude group: 'com.nineoldandroids', module: 'library'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation('com.google.android.gms:play-services-location:20.0.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation('com.google.android.gms:play-services-vision:20.1.3') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation 'io.github.bluecodesystems:opensrp-client-utils:0.0.6'
    testImplementation 'androidx.test:core:1.5.0'

    def easyRulesVersion = '3.4.0'
    implementation "org.jeasy:easy-rules-core:$easyRulesVersion"
    implementation "org.jeasy:easy-rules-mvel:$easyRulesVersion"

    implementation 'joda-time:joda-time:2.10.14'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation fileTree(dir: rootProject.file('libs'), include: ['*.aar', '*.jar'], exclude: ['circleprogressbar*.aar', 'CircleProgressbar*.aar'])
    implementation fileTree(dir: "$projectDir/libs", include: ['*.aar', '*.jar'], exclude: ['circleprogressbar*.aar', 'CircleProgressbar*.aar'])
    implementation fileTree(dir: rootProject.projectDir, include: ['*.aar', '*.jar'], exclude: ['circleprogressbar*.aar', 'CircleProgressbar*.aar'])
    implementation 'io.github.bluecodesystems:circleprogressbar:1.0.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation('com.github.raihan-mpower:FancyAlertDialog-Android:0.3@aar') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.robolectric:robolectric:4.10.3'
    testImplementation 'androidx.sqlite:sqlite:2.3.1'
    testImplementation 'net.zetetic:android-database-sqlcipher:4.5.4'
    testImplementation 'org.json:json:20231013'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
}

tasks.withType(Test).configureEach {
    jacoco {
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn 'testDebugUnitTest'
    reports {
        xml.required = true
        xml.outputLocation = file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml")
        html.required = true
        html.outputLocation = file("${buildDir}/reports/jacoco/jacocoRootReport/html")
    }
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"
    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: buildDir, includes: [
            'jacoco/testDebugUnitTest.exec',
            'outputs/code-coverage/connected/*coverage.ec'
    ]))
}

tasks.named('coveralls') {
    dependsOn 'jacocoTestReport'
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}

apply from: '../maven.gradle'
